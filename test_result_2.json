{
  "questions": [
    {
      "id": "Q001",
      "title": "What are idempotent and non-idempotent operations?",
      "type": "Short Answer",
      "refer": "Chapter 3 Distributed Objects & Remote Invocation",
      "knowledge_points": [
        "Object-based model: remote method invocation (RMI)"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q002",
      "title": "A distributed contact tracing system maintains the records of lessons attended by students. The server provides three services. The first service is for the students to register attendance by specifying the location of a lesson (a string), the time of the lesson (two integers, day and hour), and the student name (a string). The second service is for the manager to retrieve all the lessons attended by a particular student by specifying the student name. The third service is for the manager to query the names of all the students attending a particular lesson by specifying the location and the time of the lesson. Design a Java remote interface for the server.",
      "type": "Programming",
      "refer": "Chapter 3 Distributed Objects & Remote Invocation",
      "knowledge_points": [
        "An example of Java RMI",
        "Architecture of RMI",
        "Distributed object model"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q003",
      "title": "What is the purpose of mounting in a distributed file system? How is mounting carried out in the NFS?",
      "type": "Short Answer",
      "refer": "Chapter 4 Distributed File Systems",
      "knowledge_points": [
        "Introduction",
        "Sun Network File System"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q004",
      "title": "A distributed file system consists of three computers: a server and two clients A and B. Let f be a single-block file stored at the server. Figure Q2 shows the operations performed by clients A and B on file f, where “o”, “r”, “u” and \"c\" represent open, read, update and close operations respectively. A and B both start with an empty client cache, and the caches are large enough to avoid any replacement. The updates made by B do not change the length of file f. The transmission delay in the network and the processing times at the computers are negligible.\nFor each of the following cases, determine which read operations of A return the file that incorporates the most recent update by B, and determine the time points when the file is transferred from the server to A.\n(i) The system is an NFS. The clients use a freshness interval of 3 seconds to maintain cache consistency, and client B uses a bio-daemon process to send its updates to the server right after making each update.\n(ii) The system is an AFS that implements session update semantics.",
      "type": "Calculation",
      "refer": "Chapter 4 Distributed File Systems",
      "knowledge_points": [
        "Sun Network File System",
        "Andrew and Coda File Systems"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q005",
      "title": "Three processes p1, p2 and p3 are running on different computers in an asynchronous distributed system. Each process has a local clock. Figure Q3 shows four messages sent between the processes, where events a to h represent the sending and receiving events of these messages. Let te be the reading of p1's clock at event e, and tg be the reading of p2's clock at event g. Suppose that p3 knows te and tg, as well as the lengths of the time intervals measured by respective clocks as shown in the figure.\n(a) If p3 would like to synchronize its clock with p2's clock as accurately as possible, what time should p3 set its clock to when it receives the message at event k? What is the accuracy of this setting?",
      "type": "Calculation",
      "refer": "Chapter 7 Time and Global States",
      "knowledge_points": [
        "Synchronizing Physical Clocks"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q006",
      "title": "Referring to the setup in Figure Q3: (b) If p3 would like to synchronize its clock with p1's clock as accurately as possible, what time should p3 set its clock to at event h? What is the accuracy of this setting?",
      "type": "Calculation",
      "refer": "Chapter 7 Time and Global States",
      "knowledge_points": [
        "Synchronizing Physical Clocks"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q007",
      "title": "Referring to the setup in Figure Q3: (c) Timestamp all the events in Figure Q3 using the vector clocks.",
      "type": "Calculation",
      "refer": "Chapter 7 Time and Global States",
      "knowledge_points": [
        "Causal Ordering and Logical Clocks"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q008",
      "title": "Referring to the setup in Figure Q3: (d) Assume that message delivery on each unidirectional point-to-point channel follows FIFO order. p2 initiates the Chandy-and-Lamport algorithm sometime between events c and f to record a snapshot of the system. List all the possible snapshots finally recorded. Indicate clearly the process states and channel states in the snapshots. In your answer, if needed, use S1, S2 and S3 to represent the initial states of p1, p2 and p3 respectively, and use Sx to represent the state of the process where event x occurs immediately after event x's occurrence (for example, Sa is the state of p3 immediately after event a occurs, and Sc is the state of p2 immediately after event c occurs).",
      "type": "Essay",
      "refer": "Chapter 7 Time and Global States",
      "knowledge_points": [
        "Global States",
        "Distributed Debugging"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q009",
      "title": "The vector clock mechanism is used to timestamp the events that occur in a distributed system of three processes p1, p2, p3. Suppose that in a consistent cut, the last event occurring in each process has the following timestamps:\np1: (300, 100, 100)\np2: (200, 200, 200)\np3: (300, a, b)\nWhat are the possible ranges of the values a and b respectively? Briefly explain your answer.",
      "type": "Calculation",
      "refer": "Chapter 7 Time and Global States",
      "knowledge_points": [
        "Causal Ordering and Logical Clocks",
        "Global States"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q010",
      "title": "Suppose that the Ricart and Agrawala algorithm is used for distributed mutual exclusion among n processes p1, p2, ..., pn. Below is the partial pseudocode of the algorithm executed by a process pi. Complete the algorithm by filling in the boxes A to F with appropriate pseudocode.\n\nOn initialization\n  state := RELEASED;\nTo enter the critical section\n  [ A ]\n  send request to all the other processes;\n  T := the timestamp of the request by the logical clock;\n  [ B ]\n  state := HELD;\nOn receipt of a request (Tj, pj) from another process pj (j ≠ i)\n  if (state = RELEASED or [ C ])\n  then\n    [ D ]\n  else\n    [ E ]\n  end if\nTo exit the critical section\n  [ F ]\n  reply to all queued requests;",
      "type": "Fill in Blank",
      "refer": "Uncategorized",
      "knowledge_points": [
        "Uncategorized"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q011",
      "title": "In the Ricart and Agrawala algorithm, suppose the statement \"T := the timestamp of the request by the logical clock\" is changed to \"T := a random number\". Assume that different processes never generate the same random number. Does the algorithm still guarantee that at most one process may execute in the critical section at any time? Briefly explain your answer.",
      "type": "Essay",
      "refer": "Uncategorized",
      "knowledge_points": [
        "Uncategorized"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q012",
      "title": "Consider a replicated shared object service hosting an integer object x whose initial value is 0. Table Q6 shows the operations performed by two clients on x, listed in program order for each client.\nClient A: write(x ← x + 6), read(x)→a, write(x ← x + 50), read(x)→b\nClient B: write(x ← x + 400), read(x)→c, read(x)→400, read(x)→d\n(a) If the object service is sequentially consistent, what are the possible combinations of the values a and b?",
      "type": "Short Answer",
      "refer": "Uncategorized",
      "knowledge_points": [
        "Uncategorized"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q013",
      "title": "Consider a replicated shared object service hosting an integer object x whose initial value is 0. Table Q6 shows the operations performed by two clients on x, listed in program order for each client.\nClient A: write(x ← x + 6), read(x)→a, write(x ← x + 50), read(x)→b\nClient B: write(x ← x + 400), read(x)→c, read(x)→400, read(x)→d\n(b) If the object service is monotonic-read consistent, what are the possible combinations of the values c and d?",
      "type": "Short Answer",
      "refer": "Uncategorized",
      "knowledge_points": [
        "Uncategorized"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q014",
      "title": "Consider a replicated shared object service hosting an integer object x whose initial value is 0. Table Q6 shows the operations performed by two clients on x, listed in program order for each client.\nClient A: write(x ← x + 6), read(x)→a, write(x ← x + 50), read(x)→b\nClient B: write(x ← x + 400), read(x)→c, read(x)→400, read(x)→d\n(c) If the object service is both monotonic-read consistent and monotonic-write consistent, what are the possible combinations of the values c and d?",
      "type": "Short Answer",
      "refer": "Uncategorized",
      "knowledge_points": [
        "Uncategorized"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q015",
      "title": "Consider a replicated shared object service hosting an integer object x whose initial value is 0. Table Q6 shows the operations performed by two clients on x, listed in program order for each client.\nClient A: write(x ← x + 6), read(x)→a, write(x ← x + 50), read(x)→b\nClient B: write(x ← x + 400), read(x)→c, read(x)→400, read(x)→d\n(d) If the object service is read-your-writes consistent, what are the possible combinations of the values a and b?",
      "type": "Short Answer",
      "refer": "Uncategorized",
      "knowledge_points": [
        "Uncategorized"
      ],
      "source": "2.pdf"
    },
    {
      "id": "Q016",
      "title": "Consider a replicated shared object service hosting an integer object x whose initial value is 0. Table Q6 shows the operations performed by two clients on x, listed in program order for each client.\nClient A: write(x ← x + 6), read(x)→a, write(x ← x + 50), read(x)→b\nClient B: write(x ← x + 400), read(x)→c, read(x)→400, read(x)→d\n(e) If a = 406 and the object service is writes-follow-reads consistent, what are the possible values of b?",
      "type": "Short Answer",
      "refer": "Uncategorized",
      "knowledge_points": [
        "Uncategorized"
      ],
      "source": "2.pdf"
    }
  ]
}