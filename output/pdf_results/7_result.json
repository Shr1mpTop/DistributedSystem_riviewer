{
  "questions": [
    {
      "id": "Q001",
      "title": "1. (a) In a distributed banking system, the server keeps the transaction records of credit cards and provides two services. The first service is for customers to query the available credit limit (a floating-point value) by specifying the credit card number (an integer). The second service is to keep customers informed of their new transactions through callback. To use this service, a customer must register his interest by specifying the credit card number. A callback from the server includes the transaction description (a string) and the amount used (a floating-point value). Design Java remote interfaces for the server and the customer. (6 marks)\n(b) Let A and B be two different idempotent operations on the same object. Let C be a compound operation that first executes A and then executes B. Analyze whether operation C is idempotent and briefly explain your answer. (6 marks)\n(c) Briefly explain one-copy update semantics and session update semantics. What update semantics do the local UNIX file system, the Network File System and the Andrew File System implement respectively? (5 marks)",
      "type": "Short Answer",
      "refer": "Chapter 3 Distributed Objects & Remote Invocation",
      "knowledge_points": [
        "An example of Java RMI",
        "Sun Network File System",
        "Andrew and Coda File Systems"
      ],
      "source": "7.pdf"
    },
    {
      "id": "Q002",
      "title": "2. In a peer-to-peer file sharing system based on Chord routing, the identifier circle ranges from 0 to 127 (i.e., 2^7 – 1). There are 10 nodes in the system: N0, N6, N25, N38, N45, N58, N67, N73, N88 and N94, where the numbers behind 'N' denote the node identifiers on the identifier circle.\n(a) What is the route of a query issued by node N88 for the location information of file K71 (the number behind 'K' denotes the key identifier of the file on the identifier circle)? (5 marks)\n(b) When a new node joins the system, it changes the route of the query in Q2(a). What are the possible node identifiers of this new node? (5 marks)",
      "type": "Calculation",
      "refer": "Chapter 5 Peer-to-Peer File Sharing Systems",
      "knowledge_points": [
        "Structured DHT Systems"
      ],
      "source": "7.pdf"
    },
    {
      "id": "Q003",
      "title": "3. Three processes p1, p2 and p3 are running on different computers in an asynchronous distributed system. Each process has a local clock. Figure Q3 shows four messages sent between the processes, where events a to h represent the sending and receiving events of these messages. Let te be the reading of p1's clock at event e, and tg be the reading of p2's clock at event g. Suppose that p3 knows te and tg, as well as the lengths of the time intervals measured by the respective clocks as shown in Figure Q3.\n[Image of Figure Q3 showing process timelines and message passing with time intervals: P1 has events d, e with 600ms between them. P2 has events b, c, f, g with 300ms between f and g, and 800ms between b and c. P3 has events a, h with 1584ms between them. Messages are sent from b to d, c to f, a to b, and g to h. Interval between c and g is 1414ms based on p2's clock.]\n(a) Assume that the clock drifts are negligible. If p3 would like to synchronize its clock with p2's clock as accurately as possible, what time should p3 set its clock to when it receives the message at event h? What is the accuracy of this setting? (4 marks)\n(b) Assume that the clock drifts are negligible. If p3 would like to synchronize its clock with p1's clock as accurately as possible, what time should p3 set its clock to at event h? What is the accuracy of this setting? (4 marks)\n(c) Suppose that the drift rate of each clock is bounded by 10 ms per second (the drift rate of a clock is defined as the change in the offset between the clock and a perfect reference clock per unit of time measured by the perfect reference clock). If p3 would like to synchronize its clock with p2's clock as accurately as possible, what time should p3 set its clock to at event h? What is the accuracy of this setting? (6 marks)\n(d) List all the events that happened-before event e in causal ordering. (2 marks)\n(e) Assume that message delivery on each unidirectional point-to-point channel follows FIFO order. Suppose that p1 initiates the Chandy-and-Lamport algorithm immediately after event e to record a snapshot of the system. What are the possible snapshots finally recorded? In your answer, if needed, use S1, S2 and S3 to represent the initial states of p1, p2 and p3 respectively, and use Sx to represent the state of the process immediately after event x occurs (for example, Sa is the state of p3 immediately after event a occurs, and Sc is the state of p2 immediately after event c occurs). (6 marks)",
      "type": "Calculation",
      "refer": "Chapter 7 Time and Global States",
      "knowledge_points": [
        "Synchronizing Physical Clocks",
        "Causal Ordering and Logical Clocks",
        "Global States"
      ],
      "source": "7.pdf"
    },
    {
      "id": "Q004",
      "title": "4. Figure Q4 shows the execution of two processes p1 and p2 in an asynchronous distributed system, where the dots represent the events occurring in the processes, and the arrows represent the messages sent between the processes. Process p1 contains a variable x, and process p2 contains a variable y. The values of x and y at the different process states are shown in Figure Q4.\n[Image of Figure Q4 showing two process timelines. p1 has states: x=19, x=19, x=?, x=?, x=17, x=17, x=17. p2 has states: y=6, y=6, y=12, y=12, y=8, y=8, y=10, y=10. Messages are sent from p1 to p2 and p2 to p1.]\n(a) Draw the lattice of consistent global states. In the lattice, use Sij to denote the global state after i events at process p1 and j events at process p2. (6 marks)\n(b) If it can be inferred that the constraint |x − y| > 6 must be broken in the execution, what is the possible range of x's values in the two states shown by \"x = ?\" (note that these two states have the same x value)? (7 marks)",
      "type": "Short Answer",
      "refer": "Chapter 7 Time and Global States",
      "knowledge_points": [
        "Global States",
        "Distributed Debugging"
      ],
      "source": "7.pdf"
    },
    {
      "id": "Q005",
      "title": "5. (a) Suppose that the Ricart and Agrawala algorithm is used for distributed mutual exclusion among n processes p1, p2, ..., pn. Below is the partial pseudocode of the algorithm executed by a process pi. Complete the algorithm by filling in the boxes A to F with the appropriate pseudocode. Each box other than D is for one statement, and D is a logical condition.\nOn initialization\n  state := RELEASED;\nTo enter the critical section\n  state := WANTED;\n  [Box A]\n  T := the timestamp of the request by the logical clock;\n  [Box B]\n  [Box C]\nOn receipt of a request (Tj, pj) from another process pj (j ≠ i)\n  if [Box D]\n  then\n    [Box E]\n  else\n    queue request from pj without replying;\n  end if\nTo exit the critical section\n  state := RELEASED;\n  [Box F]\n(6 marks)\n(b) In the Ricart and Agrawala algorithm, suppose the statement “T := the timestamp of the request by the logical clock” is changed to “T := i” (i.e., the timestamp is set to the process index). Does the algorithm still guarantee that at most one process may execute in the critical section at any time? Briefly explain your answer. (7 marks)\n(c) Suppose that we would like to modify the Ricart and Agrawala algorithm to coordinate p1, p2, ..., pn for accessing a shared resource that can be accessed by at most two processes at any time. Which box (or boxes) in Q5(a) need to be amended and how it (or they) should be amended to achieve this goal? (5 marks)",
      "type": "Fill in Blank",
      "refer": "Chapter 1 Characterization of Distributed Systems & System Models",
      "knowledge_points": [
        "Fundamental models"
      ],
      "source": "7.pdf"
    },
    {
      "id": "Q006",
      "title": "6. Consider a replicated shared object service hosting an integer object x whose initial value is 0. Table Q6 shows the operations performed by two clients on x. For example, read(x) → a denotes a read operation on x returning a value a, and write(x ← x + 50) denotes a write operation increasing the value of x by 50. The operations of each client are listed in the order that they are performed by the client.\n[Table Q6: Client A operations in program order are write(x ← x + 6), read(x) → a, write(x ← x + 50), read(x) → b. Client B operations in program order are read(x) → c, write(x ← x + 400), read(x) → d.]\n(a) If a = 406 and the object service is sequentially consistent, what are the possible combinations of the values c and d? (4 marks)\n(b) If the object service is FIFO consistent, what are the possible combinations of the values a and b? (4 marks)\n(c) If a = 400 and the object service is monotonic-read consistent, what are the possible values of b? (4 marks)\n(d) If a = 406 and the object service is read-your-writes consistent, what are the possible values of b? (4 marks)\n(e) If a = 400 and the object service is both monotonic-write consistent and writes-follow-reads consistent, what are the possible values of b? (4 marks)",
      "type": "Short Answer",
      "refer": "Chapter 1 Characterization of Distributed Systems & System Models",
      "knowledge_points": [
        "Fundamental models"
      ],
      "source": "7.pdf"
    }
  ]
}